#!/bin/bash

source config.ini

echo "Create tables"
echo ""
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user $STATS_DB < $PATH_TO_poracleSTATS/default_files/tables.sql
else
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $STATS_DB < $PATH_TO_poracleSTATS/default_files/tables.sql
fi

echo "Create sql aggregation file"
echo ""
cp $PATH_TO_poracleSTATS/default_files/stats1440.sql.default $PATH_TO_poracleSTATS/cron_files/stats1440.sql
cp $PATH_TO_poracleSTATS/default_files/stats10080.sql.default $PATH_TO_poracleSTATS/cron_files/stats10080.sql
cd $PATH_TO_poracleSTATS/cron_files && sed -i "s/poracleStats/$STATS_DB/g" *.sql

echo "Create crontab file"
echo ""
cp $PATH_TO_poracleSTATS/default_files/crontab.txt.default $PATH_TO_poracleSTATS/crontab.txt
PATH_TO_STATS2=$(sed 's@/@\\/@g' <<< $PATH_TO_poracleSTATS)
cd $PATH_TO_poracleSTATS && sed -i "s/pathToStats/$PATH_TO_STATS2/g" *.txt

echo "Create Grafana templates"
echo ""
DS_STATS="${DataSource_stats^^}"
mkdir -p $PATH_TO_poracleSTATS/grafana
cd $PATH_TO_poracleSTATS/grafana/ && rm -f *.json && rm -f *.default
cp $PATH_TO_poracleSTATS/default_files/40_overview.json.default $PATH_TO_poracleSTATS/grafana/40_overview.json
cp $PATH_TO_poracleSTATS/default_files/41_messages.json.default $PATH_TO_poracleSTATS/grafana/41_messages.json
cp $PATH_TO_poracleSTATS/default_files/42_message_times.json.default $PATH_TO_poracleSTATS/grafana/42_message_times.json
cp $PATH_TO_poracleSTATS/default_files/43_warning_error.json.default $PATH_TO_poracleSTATS/grafana/43_warning_error.json
cp $PATH_TO_poracleSTATS/default_files/44_user_data.json.default $PATH_TO_poracleSTATS/grafana/44_user_data.json
cd $PATH_TO_poracleSTATS/grafana/ && sed -i "s/Poracle/$DataSource_stats/g" *.json
cd $PATH_TO_poracleSTATS/grafana/ && sed -i "s/PORACLE/$DS_STATS/g" *.json

#New install check
if [ -z "$SQL_password" ]
then
  firstInstall=$(mysql -h$DB_IP -P$DB_PORT -u$SQL_user $STATS_DB -N -se "SELECT count(*) FROM controller;")
else
  firstInstall=$(mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $STATS_DB -N -se "SELECT count(*) FROM controller;")
fi

#firstInstall=0

if [ $firstInstall = 0 ]
then
  echo ""
  echo "First time installation, do you wish to process existing logs?"
  read -p "Continue (y/n)?" choice
  if [ $choice = "y" ] || [ $choice = "yes" ] || [ $choice = "Y" ] || [ $choice = "Yes" ]
  then
    hoursback=144
    while test $hoursback != 0
    do
      echo ""
      echo ""
      echo "Hourly data: processing now - $hoursback hours"
      echo ""
      cp $PATH_TO_poracleSTATS/cron_files/stats60.sh $PATH_TO_poracleSTATS/cron_files/stats60.sh.tmp
      sed -i "s/1 hour ago/$hoursback hour ago/g" $PATH_TO_poracleSTATS/cron_files/stats60.sh.tmp
      cd $PATH_TO_poracleSTATS/cron_files && ./stats60.sh.tmp
      rm $PATH_TO_poracleSTATS/cron_files/stats60.sh.tmp
      hoursback="$(( hoursback - 1 ))"
    done
  fi
  if [ $choice = "y" ] || [ $choice = "yes" ] || [ $choice = "Y" ] || [ $choice = "Yes" ]
  then
    hoursback=8640
    while test $hoursback != 0
    do
      echo ""
      echo ""
      echo "Daily data: processing now - $hoursback minutes"
      echo ""
      cp $PATH_TO_poracleSTATS/default_files/stats1440.sql.default $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
      sed -i "s/interval 1440 minute/interval $hoursback minute/g" $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
      sed -i "s/poracleStats/$STATS_DB/g" $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
      if [ -z "$SQL_password" ]
        then
          mysql -h$DB_IP -P$DB_PORT -u$SQL_user $STATS_DB < $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
        else
          mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $STATS_DB < $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
      fi
      rm $PATH_TO_poracleSTATS/default_files/stats1440.sql.tmp
      hoursback="$(( hoursback - 1440 ))"
    done
  fi
fi

echo ""
echo "All done"
